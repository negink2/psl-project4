shiny::runApp()
# use colClasses = 'NULL' to skip columns
myurl = "https://liangfgithub.github.io/MovieData/"
ratings = read.csv(paste0(myurl, 'ratings.dat?raw=true'),
sep = ':',
colClasses = c('integer', 'NULL'),
header = FALSE)
colnames(ratings) = c('UserID', 'MovieID', 'Rating', 'Timestamp')
head(ratings)
# use colClasses = 'NULL' to skip columns
myurl = "https://liangfgithub.github.io/MovieData/"
#ratings = read.csv(paste0(myurl, 'ratings.dat?raw=true'),
sep = ':',
colClasses = c('integer', 'NULL'),
header = FALSE)
#colnames(ratings) = c('UserID', 'MovieID', 'Rating', 'Timestamp')
movies = readLines(paste0(myurl, 'movies.dat?raw=true'))
movies = strsplit(movies, split = "::", fixed = TRUE, useBytes = TRUE)
movies = matrix(unlist(movies), ncol = 3, byrow = TRUE)
movies = data.frame(movies, stringsAsFactors = FALSE)
colnames(movies) = c('MovieID', 'Title', 'Genres')
movies$MovieID = as.integer(movies$MovieID)
# convert accented characters
movies$Title[73]
movies$Title = iconv(movies$Title, "latin1", "UTF-8")
movies$Title[73]
# extract year
movies$Year = as.numeric(unlist(
lapply(movies$Title, function(x) substr(x, nchar(x)-4, nchar(x)-1))))
head(movies)
movies <- fread('movie_data/movies.dat')
head(movies)
movies = readLines(paste0(myurl, 'movies.dat?raw=true'))
movies = strsplit(movies, split = "::", fixed = TRUE, useBytes = TRUE)
movies = matrix(unlist(movies), ncol = 3, byrow = TRUE)
movies = data.frame(movies, stringsAsFactors = FALSE)
colnames(movies) = c('MovieID', 'Title', 'Genres')
movies$MovieID = as.integer(movies$MovieID)
# convert accented characters
movies$Title[73]
movies$Title = iconv(movies$Title, "latin1", "UTF-8")
movies$Title[73]
# extract year
movies$Year = as.numeric(unlist(
lapply(movies$Title, function(x) substr(x, nchar(x)-4, nchar(x)-1))))
head(movies)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
myurl = "https://liangfgithub.github.io/MovieData/"
#ratings = read.csv(paste0(myurl, 'ratings.dat?raw=true'),
sep = ':',
colClasses = c('integer', 'NULL'),
header = FALSE)
#colnames(ratings) = c('UserID', 'MovieID', 'Rating', 'Timestamp')
movies = readLines(paste0(myurl, 'movies.dat?raw=true'))
movies = strsplit(movies, split = "::", fixed = TRUE, useBytes = TRUE)
movies = matrix(unlist(movies), ncol = 3, byrow = TRUE)
movies = data.frame(movies, stringsAsFactors = FALSE)
colnames(movies) = c('MovieID', 'Title', 'Genres')
movies$MovieID = as.integer(movies$MovieID)
# convert accented characters
movies$Title[73]
movies$Title = iconv(movies$Title, "latin1", "UTF-8")
movies$Title[73]
# extract year
movies$Year = as.numeric(unlist(
lapply(movies$Title, function(x) substr(x, nchar(x)-4, nchar(x)-1))))
head(movies)
movie_images = paste("movie_data/images/", movies$MovieID, '.jpg', sep='')
head(movie_images)
movie_images[1]
runApp()
runApp()
movies$Genres = str_replace_all(movies$Genres, "|", ",")
head(movies$Genres)
movies$Genres = str_replace_all(movies$Genres, "|", ",")
# use colClasses = 'NULL' to skip columns
myurl = "https://liangfgithub.github.io/MovieData/"
#ratings = read.csv(paste0(myurl, 'ratings.dat?raw=true'),
sep = ':',
colClasses = c('integer', 'NULL'),
header = FALSE)
movies = readLines(paste0(myurl, 'movies.dat?raw=true'))
movies = strsplit(movies, split = "::", fixed = TRUE, useBytes = TRUE)
movies = matrix(unlist(movies), ncol = 3, byrow = TRUE)
movies = data.frame(movies, stringsAsFactors = FALSE)
colnames(movies) = c('MovieID', 'Title', 'Genres')
movies$MovieID = as.integer(movies$MovieID)
# convert accented characters
movies$Title[73]
movies$Title = iconv(movies$Title, "latin1", "UTF-8")
movies$Title[73]
# extract year
movies$Year = as.numeric(unlist(
lapply(movies$Title, function(x) substr(x, nchar(x)-4, nchar(x)-1))))
head(movies)
movie_images = paste("movie_data/images/", movies$MovieID, '.jpg', sep='')
movie_images[1]
movies$Genres = str_replace_all(movies$Genres, "|", ",")
head(movies$Genres)
movies$Genres = gsub(movies$Genres, "|", ",")
head(movies$Genres)
# use colClasses = 'NULL' to skip columns
myurl = "https://liangfgithub.github.io/MovieData/"
#ratings = read.csv(paste0(myurl, 'ratings.dat?raw=true'),
sep = ':',
colClasses = c('integer', 'NULL'),
header = FALSE)
#colnames(ratings) = c('UserID', 'MovieID', 'Rating', 'Timestamp')
movies = readLines(paste0(myurl, 'movies.dat?raw=true'))
movies = strsplit(movies, split = "::", fixed = TRUE, useBytes = TRUE)
movies = matrix(unlist(movies), ncol = 3, byrow = TRUE)
movies = data.frame(movies, stringsAsFactors = FALSE)
colnames(movies) = c('MovieID', 'Title', 'Genres')
movies$MovieID = as.integer(movies$MovieID)
# convert accented characters
movies$Title[73]
movies$Title = iconv(movies$Title, "latin1", "UTF-8")
movies$Title[73]
# extract year
movies$Year = as.numeric(unlist(
lapply(movies$Title, function(x) substr(x, nchar(x)-4, nchar(x)-1))))
movies$Genres = gsub("|", ",", movies$Genres)
head(movies$Genres)
# use colClasses = 'NULL' to skip columns
myurl = "https://liangfgithub.github.io/MovieData/"
#ratings = read.csv(paste0(myurl, 'ratings.dat?raw=true'),
sep = ':',
colClasses = c('integer', 'NULL'),
header = FALSE)
#colnames(ratings) = c('UserID', 'MovieID', 'Rating', 'Timestamp')
movies = readLines(paste0(myurl, 'movies.dat?raw=true'))
movies = strsplit(movies, split = "::", fixed = TRUE, useBytes = TRUE)
movies = matrix(unlist(movies), ncol = 3, byrow = TRUE)
movies = data.frame(movies, stringsAsFactors = FALSE)
colnames(movies) = c('MovieID', 'Title', 'Genres')
movies$MovieID = as.integer(movies$MovieID)
# convert accented characters
movies$Title[73]
movies$Title = iconv(movies$Title, "latin1", "UTF-8")
movies$Title[73]
# extract year
movies$Year = as.numeric(unlist(
lapply(movies$Title, function(x) substr(x, nchar(x)-4, nchar(x)-1))))
head(movies)
movie_images = paste("movie_data/images/", movies$MovieID, '.jpg', sep='')
movie_images[1]
gs = gsub("|", ",", movies$Genres)
head(gs)
gs = sub("|", ",", movies$Genres)
head(gs)
gs = chartr(old = "|", new = ",", movies$Genres)
head(gs)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
u_gs = unique(gs)
print(u_gs)
gs = chartr(old = "|", new = ",", movies$Genres)
u_gs = unique(gs)
print(u_gs)
# use colClasses = 'NULL' to skip columns
myurl = "https://liangfgithub.github.io/MovieData/"
#ratings = read.csv(paste0(myurl, 'ratings.dat?raw=true'),
sep = ':',
colClasses = c('integer', 'NULL'),
header = FALSE)
#colnames(ratings) = c('UserID', 'MovieID', 'Rating', 'Timestamp')
movies = readLines(paste0(myurl, 'movies.dat?raw=true'))
movies = strsplit(movies, split = "::", fixed = TRUE, useBytes = TRUE)
movies = matrix(unlist(movies), ncol = 3, byrow = TRUE)
movies = data.frame(movies, stringsAsFactors = FALSE)
colnames(movies) = c('MovieID', 'Title', 'Genres')
movies$MovieID = as.integer(movies$MovieID)
# convert accented characters
movies$Title[73]
movies$Title = iconv(movies$Title, "latin1", "UTF-8")
movies$Title[73]
# extract year
movies$Year = as.numeric(unlist(
lapply(movies$Title, function(x) substr(x, nchar(x)-4, nchar(x)-1))))
gs = chartr(old = "|", new = ",", movies$Genres)
u_gs = unique(gs)
print(u_gs)
print(u_gs)
u_gs = [] #= unique(gs)
for(g in gs){
g_separated = g.split(',')
for(s in g_separated){
u_gs.append(s)
}
}
gs = chartr(old = "|", new = ",", movies$Genres)
u_gs = [] #= unique(gs)
for(g in gs){
g_separated = strsplit(g, ',')
for(s in g_separated){
u_gs.append(s)
}
}
u_gs = list() #[] #= unique(gs)
for(g in gs){
g_separated = strsplit(g, ',')
for(s in g_separated){
u_gs.append(s)
}
}
for(g in gs){
g_separated = strsplit(g, ',')
for(s in g_separated){
#u_gs .append(s)
print(s)
}
}
u_gs = list() #[] #= unique(gs)
for(g in gs){
g_separated = strsplit(g, ',')
for(s in g_separated){
#u_gs .append(s)
for(c in s){
u_gs.append(c)
}
}
}
u_gs = list() #[] #= unique(gs)
for(g in gs){
g_separated = strsplit(g, ',')
for(s in g_separated){
#u_gs .append(s)
for(c in s){
append(u_gs, c)
}
}
}
u_gs = unique(u_gs)
print(u_gs)
u_gs = list() #[] #= unique(gs)
for(g in gs){
g_separated = strsplit(g, ',')
for(s in g_separated){
#u_gs .append(s)
for(c in s){
append(u_gs, c)
}
}
}
u_gs = unique(u_gs)
print(u_gs)
u_gs = [] #= unique(gs)
for(g in gs){
g_separated = strsplit(g, ',')
for(s in g_separated){
#u_gs .append(s)
for(c in s){
append(u_gs, c)
}
}
}
u_gs = unique(u_gs)
print(u_gs)
u_gs = [] #= unique(gs)
for(g in gs){
g_separated = strsplit(g, ',')
for(s in g_separated){
#u_gs .append(s)
for(c in s){
append(u_gs, c)
}
}
}
u_gs = unique(u_gs)
print(u_gs)
g_separated = strsplit(g, ',')
append(u_gs, c)
head(u_gs)
head(u_gs)
u_gs
View(u_gs)
u_gs = [] #= unique(gs)
for(g in gs){
g_separated = strsplit(g, ',')
for(s in g_separated){
#u_gs .append(s)
append(u_gs, s)
}
}
u_gs = unique(u_gs)
gs = chartr(old = "|", new = ",", movies$Genres)
u_gs = [] #= unique(gs)
for(g in gs){
g_separated = strsplit(g, ',')
print(g_separated)
for(s in g_separated){
#u_gs .append(s)
append(u_gs, s)
}
}
u_gs = [] #= unique(gs)
for(g in gs){
g_separated = strsplit(g, ',')
for(s in g_separated){
#u_gs .append(s)
print(s)
append(u_gs, s)
}
}
u_gs = [] #= unique(gs)
for(g in gs){
g_separated = strsplit(g, ',')
append(u_gs, g_separated)
}
u_gs = unique(u_gs)
u_gs = [] #= unique(gs)
i = 1
for(g in gs){
g_separated = strsplit(g, ',')
u_gs[i] = g_separated)
i = i + 1
}
gs = chartr(old = "|", new = ",", movies$Genres)
u_gs = [] #= unique(gs)
gs = chartr(old = "|", new = ",", movies$Genres)
u_gs = list() #= unique(gs)
i = 1
for(g in gs){
g_separated = strsplit(g, ',')
u_gs[i] = g_separated)
i = i + 1
}
for(g in gs){
g_separated = strsplit(g, ',')
u_gs[i] = g_separated
i = i + 1
}
u_gs = unique(u_gs)
View(u_gs)
u_gs = list() #= unique(gs)
i = 1
for(g in gs){
g_separated = strsplit(g, ',')
for(s in g_separated){
u_gs[i] = s
i = i + 1
}
}
View(u_gs)
u_gs = unique(u_gs)
View(u_gs)
runApp()
runApp()
shiny::runApp()
